name: Deploy DAPI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_DIR: dapi-w3registrar

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERSION_TAG: developement
      CONFIG_PATH: ./config.docker.toml
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t w3registrar:${{ env.VERSION_TAG }} .
          docker save w3registrar:${{ env.VERSION_TAG }} -o dapi-w3registrar.tar

      - name: Create Required files
        env:
          AGE_PRIVATE_KEY: ${{ secrets.AGE_PRIVATE_KEY }}
        run: |
          #install age
          sudo apt-get update
          sudo apt-get install -y age

          mkdir distfiles

          printf '%s' "$AGE_PRIVATE_KEY" > age-key.txt
          age --decrypt -i ./age-key.txt --output distfiles/${{ env.CONFIG_PATH }} configs/config.staging.age
          shred -u age-key.txt

          # deploy ssl certificate
          echo "${{ secrets.SSL_CERT }}" | base64 -d > distfiles/ssl_cert.pem

          # Loop through potential network keyfiles
          for network in polkadot kusama rococo paseo; do
            key_var="KEYFILE_${network^^}"
            key_value="${!key_var}"

            if [ -n "$key_value" ]; then
              echo "$key_value" > distfiles/.keyfile.$network
            fi
          done

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "dapi-w3registrar.tar.gz,distfiles/*"
          target: "/home/${{ secrets.DEPLOY_USER }}/${{ env.PROJECT_DIR }}"

      - name: Start services
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /home/${{ secrets.DEPLOY_USER }}/${{ env.PROJECT_DIR }}
            cp distfiles/* .
            rm -rfd distfiles/
            podman-compose down || true
            podman load -i dapi-w3registrar.tar.gz
            podman-compose up -d
            rm dapi-w3registrar.tar.gz
         EOF
