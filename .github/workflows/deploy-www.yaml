# deploy-www.yaml
name: Deploy to WWW Server using latest binary
on:
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Are you sure you want to deploy to WWW Server? (type "DEPLOY" to confirm)'
        required: true
        type: string

jobs:
  deploy:
    name: Deploy to WWW Server
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_deploy == 'DEPLOY'
    env:
      SERVER_USER: w3reg
      SERVER_HOST: 157.90.237.17
      SERVER_PORT: 22
      DEPLOY_PATH: /home/w3reg/w3registrar/backend
      BACKEND_SERVICE_NAME: w3registrar-backend
      REDIS_SERVICE_NAME: w3registrar-redis
    steps:
      # NOTE: for using latest binary
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.WWW_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ env.SERVER_PORT }} ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

        # NOTE: pulling latest binary releases, need to provide for aarch64 procie
      - name: Deploy binary to server
        run: |
          ssh -i ~/.ssh/id_ed25519 -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} << EOF
          curl -s https://api.github.com/repos/rotkonetworks/w3registrar/releases/latest \
            | jq -r '.assets[] | select(.name == "w3registrar-linux-aarch64") | .browser_download_url' \
            | xargs curl -LO
          chmod +x w3registrar-linux-amd64
          mv w3registrar-linux-amd64 ${{ env.DEPLOY_PATH }}/w3registrar-backend
          EOF

      - name: Restart service
        run: |
          ssh -i ~/.ssh/id_ed25519 -p ${{ env.SERVER_PORT }} ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} << EOF
            systemctl daemon-reload
            systemctl restart ${{ env.BACKEND_SERVICE_NAME }} ${{ env.REDIS_SERVICE_NAME }}
            systemctl status ${{ env.BACKEND_SERVICE_NAME }} --no-pager
            systemctl status ${{ env.REDIS_SERVICE_NAME }} --no-pager
          EOF
