services:
  redis:
    image: redis:7-alpine
    container_name: redis-${VERSION_TAG}
    restart: always
    ports:
      - "127.0.0.1:${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - w3r_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: ["redis-server", "--bind", "0.0.0.0"] 

  w3registrar:
    image: w3registrar:${VERSION_TAG}
    container_name: ${SERVICE_NAME}
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${W3REG_PORT}:8080"
    networks:
      - w3r_network
    volumes:
      - ${CONFIG_PATH:-./config.docker.toml}:/etc/w3registrar/config.toml:ro
      - ${KEYFILE_POLKADOT:-./keyfile.polkadot}:/etc/w3registrar/.keyfile.polkadot:ro
      - ${KEYFILE_KUSAMA:-./keyfile.kusama}:/etc/w3registrar/.keyfile.kusama:ro
      - ${KEYFILE_PASEO:-./keyfile.paseo}:/etc/w3registrar/.keyfile.paseo:ro
      - ${KEYFILE_ROCOCO:-./keyfile.rococo}:/etc/w3registrar/.keyfile.rococo:ro
    environment:
      - CONFIG_PATH=/etc/w3registrar/config.toml
      - RUST_LOG=info
      - KEYFILE_PATH=/etc/w3registrar/keyfile

volumes:
  redis_data:

networks:
  w3r_network:
    name: w3r_${VERSION_TAG}_network
    driver: bridge
