services:
  redis:
    image: redis:7-alpine
    container_name: redis-${VERSION_TAG:-prod}
    restart: always
    ports:
      - "127.0.0.1:${REDIS_PORT:-16379}:6379"
    volumes:
      - redis_data:/data
    # networks:
    #   - w3r_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: ["redis-server", "--bind", "0.0.0.0"]

    # NOTE: doesnt needed for neon remote postgres
  # postgres:
  #   image: postgres
  #   restart: always
  #   container_name: postgres-${VERSION_TAG:-prod}
  #   environment:
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_USER: w3reg_owner
  #     POSTGRES_DB: w3reg
  #   ports:
  #     - "127.0.0.1:${POSTGRES_PORT:-15432}:5432"
  #   volumes:
  #     - postgres_data:/data/postgres
  #   networks:
  #     - w3r_network
  #   healthcheck:
  #     test: [
  #       "CMD-SHELL",
  #       "pg_isready",
  #       "--host", "0.0.0.0",
  #       "--username", "w3reg_owner",
  #       "--dbname", "w3reg"
  #     ]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 3

  w3registrar:
    build:
      context: .
      dockerfile: Dockerfile
      tags:
        - "w3registrar:${VERSION_TAG:-prod}"
    image: w3registrar:${VERSION_TAG:-prod}
    container_name: ${SERVICE_NAME:-w3registrar}
    restart: always
    # depends_on:
    #   redis:
    #     condition: service_healthy
    #   postgres:
    #     condition: service_healthy
    ports:
      - "${W3REG_HTTP_PORT:-18080}:8080" # http
      - "${W3REG_WS_PORT:-18081}:8081" # websocket
      #NOTE: needed so it can connect to neon remote postgres
    network_mode: "host"
    # networks:
    #   - w3r_network
    volumes:
      - ${CONFIG_PATH:-./config.toml}:/etc/w3registrar/config.toml:ro
      - ${KEYFILE:-./keyfile}:/etc/w3registrar/keyfile:ro
    environment:
      - CONFIG_PATH=/etc/w3registrar/config.toml
      - RUST_LOG=info
      - KEYFILE_PATH=/etc/w3registrar/keyfile

volumes:
  # postgres_data:
  redis_data:
  # NOTE: access redis from hosts networkgs
# networks:
#   w3r_network:
#     name: w3r_${VERSION_TAG:-prod}_network
#     driver: bridge
